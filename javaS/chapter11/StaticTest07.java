/**
 *  栈：方法只要执行，会压栈。（局部变量）
 *  堆：new出来的对象都在堆中，垃圾回收期主要针对 （实例变量）
 *  方法区：类的信息，字节码信息，代码片段（静态变量）
 */

 /**
    总结：
        到目前为止，现学的java程序中，有顺序要求的是那些？
            第一：对于一个方法来说，方法体中的代码是有顺序的，遵循自上而下的顺序执行。
            第二：静态代码块1 和静态代码快2 是有先后顺序的。
            第三：静态代码块 和静态变量是有先后顺序的。


  */


public class StaticTest07{

    //静态变量在什么时候初始化：类加载时初始化
    //静态变量存储在哪里？方法区
    static int i = 100;

    //静态代码块什么时候执行？类加载时执行。
    static {
        //这里是否可以访问i
        System.out.println("i = " + i);
    }

    //实例变量
    int k = 111;//k变量是实例变量，在构造方法执行时，内存空间才会开辟
    
    static {
        //k变量可以访问吗？
        //static静态代码在类加载时执行，并且只执行一次
        //类加载时，k变量空间还没有开辟出来呢
        //所以下面这行代码会报错：错误: 无法从静态上下文中引用非静态 变量
        // System.out.println("k = " + k);

        //这里也会报错：
        //错误: 非法前向引用
        //因为静态变量在下面，都是静态的话，就按顺序执行
        System.out.println("name = " + name);
    }

    //静态变量在静态代码块下面
    static String name = "zhangsan";

    //入口：（main方法执行之前实际上执行了很多代码）
    public static void main(String[] args){
        System.out.println("main begin");
    }
}