多线程
    1、什么是进程？什么是线程？
        进程是一个应用程序；
        线程是一个进程当中的一个场景/执行单元；
        一个进程可以启动多个线程。
    2、java语言中，实现线程有两个方式？
        第一种方式：编写一个类，直接继承java.lang.Thread，重写run方法。
    3、线程的生命周期：
        新建状态；刚new出来的对象
        就绪状态；运行了start()方法
        运行状态；运行run()方法
        阻塞状态；遇到用户键盘输入或者sleep()方法时，会阻塞，放弃时间片
        死亡状态；run()方法结束，线程死亡。
    4、关于多线程并发环境下，数据安全问题；
        为什么这个是重点：
            以后在开发中，我们的项目都是运行在多线程的服务器中，而服务器已经将
            线程的开发，创建，启动都已经实现完了。这些代码不需要我们编写；
            最重要的是：你编写的程序放到一个多线程的环境当中，你最需要关注的是
                      你的这些数据在多并发环境下是否是安全的。
        什么时候数据在多线程并发的环境下会存在安全问题呢？
            三个条件：
                1、多线程的并发环境；
                2、有共享数据；
                3、共享数据有修改行为；
            满足以上三个条件，就会存在线程数据安全问题；
        怎么解决线程安全问题？
            线程排队执行；（不能并发）
            用排队执行解决线程安全问题；
            这种机制被称为：线程同步机制；
            语法：
              synchronized(){
                //线程同步代码块
              }
        涉及两个专业术语：
            异步编程模型：
                线程t1和线程t2，各自执行各自的，t1不管t2，t2也不用管t1；
                这种就叫做：异步编程模型；
                其实就是：多线程并发（效率较高）
                异步就是并发。
            同步编程模型：
                线程t1和线程t2，在线程t1执行的时候，必须等待t2线程执行结束，
                或者说在t2线程执行的时候，必须等待t1线程执行结束，两个线程之间
                发生了等待关系，这就是同步编程模型；
                效率较低，线程排队执行。
                同步就是排队。