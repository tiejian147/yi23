package chapter19;
/*
数组：
    1、java语言中的数组是一种引用数据结构，不是基本数据结构，父类是Object；
    2、数组实际上是一个容器，可以同时容纳多个元素；（数组是一个数据的集合）
    3、数组中可以存储引用类型数据结构，也可以存储基本类型的数据结构；
    4、因为数据是引用类型的数据结构，所以数组对象存储在堆内存当中
    5、数组存储的引用，实际上存储的是引用的内存地址；
    6、数组一旦创建，在java中规定，长度不可变；
    7、数组的分类：一维数组、二维数组、三维数组、多维数组...
    8、所有的数组都带有length属性，用来获取数组中元素的个数；
    9、java中数组的元素类型要求统一，比如int类型的数组只能存储int类型，
       person类型的数组只能存储person类型
    10、数组中存储的元素内存地址都是连续的。
    11、数组中每一个元素都是有下标的，从0开始，最后一个元素的下标是length-1；
    12、数组的优缺点：
        优点：检索效率高：
            1、每一个元素在堆内存中的存储是连续的；
            2、每一个元素在对内存中占用的空间大小也是一样的；
            3、知道第一个元素的内存地址，又知道每一个元素占用的空间大小，又知道下标，所以通过一个数学表达式就可以计
               计算出下标上元素的内存地址，直接通过内存地址定位元素，所以数组的检索效率是最高的。
        缺点：由于为了保证数组在堆内存中内存地址的连续性，在元素新增或者删除的时候，效率较低，因为需要涉及到后面的元素
             统一向前或者向后位移。
        注意：对于数组中最后一个元素的增删，是没有效率影响的。
 */
public class ArrayTest01 {
    public static void main(String[] args) {
//        这是静态初始化一维数组
        int[] a1 = {10,22,3,100};
        System.out.println("该数组的长度是：" + a1.length);
//        取数组中的元素
        System.out.println("第一个元素：" + a1[0]);
        System.out.println("第二个元素：" + a1[a1.length - 1]);

//        修改元素
        a1[0] = 1232;
        a1[3] = 555;

        System.out.println("第一个元素：" + a1[0]);
        System.out.println("第二个元素：" + a1[a1.length - 1]);

//        遍历元素
        for (int i = 0; i <a1.length ; i++) {
            System.out.println(a1[i]);
        }
    }
}
