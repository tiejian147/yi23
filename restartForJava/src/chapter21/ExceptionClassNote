1、java的异常机制：
    1.1、异常在java中以类和对象的形式存在，那么异常的继承结构是怎样的？
    我们可以用UML图来描述一下继承结构：
    画UML图有很多工具，例如：Rational Rose(收费的) 、starUml等...
    Object
    Object下有Throwable（可抛出的）
    Throwable下有两个分支：Error（不可处理，直接退出JVM）和Exception（可处理的）
    Exception下有两个分支：
        Exception的直接子类：编译时异常；（程序员在编写程序阶段必须预先对这些异常进行处理，如果
        不处理，编译器报错，因此得名：）
        RuntimeException：运行时异常（在编写阶段程序员可以预先处理，也可以不管）
    1.2、编译时异常和运行时异常，都是发生在运行阶段。编译阶段是不会发生的。
        因为编译时异常必须在编译（编写）阶段预先处理，如果不处理编译器会报错，因此得名。
        所有异常是在运行阶段发生的，因为只有程序运行阶段才会new对象。
        因为异常的发生就是在new异常对象。
    1.3、编译时异常和运行时异常的区别？
        编译时异常发生的概率比较高；
        运行时异常发生的概率比较低；
    1.7、java语言中对异常的处理方式有两种：
        第一种方式：在方法的声明位置上，使用throws关键字，抛给上一级
        第二种方式：使用try...catch语句进行异常的捕捉；