一、工具简介：
    1、多线程框架--支持多并发操作；
    2、用于对服务器模拟负载；
    3、支持web、数据库、FTP服务器系统的性能测试；
    4、开源，纯JAVA，可二次定制化开发；

二、当前使用版本号：5.1来进行操作学习；
    1、语言设置：
    bin目录下，有个jmeter.properties：
    /*
    #Preferred GUI language. Comment out to use the JVM default locale's language.
    language=zh_CN--------这一行 取消注释，然后将en 改为zh_CN


    # Additional locale(s) to add to the displayed list.
    # The current default list is: en, fr, de, no, es, tr, ja, zh_CN, zh_TW, pl, pt_BR
    # [see JMeterMenuBar#makeLanguageMenu()]
    */
    保存之后，重新打开jmeter就可以了；

    2、设置jmeter占用内存大小的配置；
    还是在bin目录下，打开jmeter.bat文件：
    150行：
    if not defined HEAP (
        rem See the unix startup file for the rationale of the following parameters,
        rem including some tuning recommendations
        set HEAP=-Xms1g -Xmx1g -XX:MaxMetaspaceSize=256m
    )

    修改：-Xmx1g  一般可以修改你使用服务器机器内存的80%

    3、GUI模式（带操作界面）下，执行jmeter脚本，只需要将脚本拖拽到窗口内就可以了；
        非GUI，在Lunix系统中，进入到jmeter的bin目录下，将测试脚本放到bin目录，然后执行命令：
        ./jmemter -n -t test.jmx

    4、线程组元件：测试计划要先保存，不要保存在默认的bin目录中，要保存到其他目录，不然删掉这个jmeter会酿成大祸，
    右键测试计划，线程组，可以添加线程组；
    勾选：独立运行每个线程组，勾选的话，会按照线程组的顺序跑先后；
        如果不勾选，没有先后顺序，会同时跑所有的现成；

    5、线程组操作禁用就不跑了，不用删除；

    6、线程组：setUp永远是在第一个线程组来执行；tearDown永远是在最后一个线程组执行；无论中间或者后面有几个普通的线程组，setUp和tearDown
      这两个线程组的顺序是永远不变的；

三、jmeter主要元件使用：
    1、配置元件；
        1.1、http请求默认值；
            *该组件可以为我们的http请求设置默认的值；
            *创建一个测试计划有很多个请求且都是发送到相同的server，只需要添加一个http request defaults
             组件，并设置“server name or IP”
            *添加多个http请求会默认使用http request defaults组件设置的值；

        1.2、http消息头管理器；
        1.3、http cookies管理器；
        1.4、http cache管理器；

    2、监听器元件；
        1.1、察看结果树：
            *分析查看某一个请求的详情；
                请求头，请求体；
                响应头，响应体；
            *在做性能场景的时候：
                分析错误请求的原因；
        1.2、聚合报告；
            汇总统计
                请求数、响应时间（平均的 90% 99% min max） 单位是ms
                错误率------越低越好
                吞吐量------越高越好
                发送/接收-----带宽
        1.3、用表格查看结果；

        1.4、图形结果；

    3、其他常用元件；
        3.1、前置处理器；
            *请求发出去之前执行的控制器；（元件）
                比如：加密md5；
        3.2、后置处理器；
            *请求发出去之后执行的控制器；（元件）
                比如：提取数据
        3.3、定时器；
            思考时间--固定定时器；----步骤1到步骤2之间需要停留时间
            同步定时器--集合点；----秒杀场景，同一时间用户高并发做相同的动作；
            随机定时器--
            吞吐量定时器
        3.4、断言；

四、脚本开发
    1、什么是jmeter脚本；
        通俗：用户操作被测软件系统某场景的动作流程；
        jmeter：用户操作被测软件系统某场景的请求；
    2、怎么快速开发漂亮的脚本；
        准确：最基本要求，脚本可以正常运行；
        快速：借助技术手动快速高效完成脚本开发；
        漂亮：脚本逻辑、维护性高；
    3、脚本开发方案；
        3.1、代理方案
            jmeter也有自己的代理，录制脚本前，我们只需要启动好代理，手动通过浏览器来控制，录制完毕停止代理；
            提示：
                1、直接保存jmx文件；
                2、需要人为调试脚本；
                3、录制https需要设置；

            操作步骤：
            3.1.1、设置浏览器的代理
            3.1.2、启动jmeter的代理服务器
            3.1.3、操作浏览器
            3.1.4、自动录制脚本，排除不需要的 图片，js，css等元素；

        3.2、fiddler方案：
            通过Fiddler是通过改写http代理，让数据从它那里通过，来监控并且截取到数据；
            在打开Fiddler的一瞬间，就已经设置好浏览器的代理了；
            当你关闭Fiddler的时候，浏览器的手动代理又自动关闭了，所以一般不用手动设置；


